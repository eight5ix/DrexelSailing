{"remainingRequest":"/Users/Diallo/Documents/GitHub/DrexelSailing/node_modules/babel-loader/lib/index.js!/Users/Diallo/Documents/GitHub/DrexelSailing/node_modules/eslint-loader/index.js??ref--13-0!/Users/Diallo/Documents/GitHub/DrexelSailing/src/auth.js","dependencies":[{"path":"/Users/Diallo/Documents/GitHub/DrexelSailing/src/auth.js","mtime":1548440191639},{"path":"/Users/Diallo/Documents/GitHub/DrexelSailing/node_modules/cache-loader/dist/cjs.js","mtime":1548361695455},{"path":"/Users/Diallo/Documents/GitHub/DrexelSailing/node_modules/babel-loader/lib/index.js","mtime":1548361695199},{"path":"/Users/Diallo/Documents/GitHub/DrexelSailing/node_modules/eslint-loader/index.js","mtime":1548361696800}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/Diallo/Documents/GitHub/DrexelSailing/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n// import firebase from '@/firebase'\n//\n// const state = {\n//   user: {},\n//   isLoggedIn = false\n// };\n//\n// const actions = {\n//   async login({context}){\n//     const provider = new firebase.auth.GoogleAuthProvider();\n//     const result = await firebase.auth().signInWithPopup(provider);\n//     console.log(result.user);\n//   }\n// }\n//\n// export default {\n//   namespaced: true,\n//   state,\n//   mutations,\n//   actions,\n// };\nimport firebase from '@/firebase';\nvar state = {\n  user: {},\n  isLoggedIn: false\n}; // const mutations = {\n//   setUser(state, user) {\n//     if (user) {\n//       state.user = user;\n//       state.isLoggedIn = true;\n//     } else {\n//       state.user = {};\n//       state.isLoggedIn = false;\n//     }\n//   },\n// };\n\nvar actions = {\n  login: function () {\n    var _login = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee() {\n      var provider, result;\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              provider = new firebase.auth.GoogleAuthProvider();\n              _context.next = 3;\n              return firebase.auth().signInWithPopup(provider);\n\n            case 3:\n              result = _context.sent;\n              console.log(result.user);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function login() {\n      return _login.apply(this, arguments);\n    }\n\n    return login;\n  }()\n};\nexport default {\n  namespaced: true,\n  state: state,\n  actions: actions\n};",{"version":3,"sources":["/Users/Diallo/Documents/GitHub/DrexelSailing/src/auth.js"],"names":["firebase","state","user","isLoggedIn","actions","login","provider","auth","GoogleAuthProvider","signInWithPopup","result","console","log","namespaced"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,QAAP,MAAqB,YAArB;AAEA,IAAMC,KAAK,GAAG;AACZC,EAAAA,IAAI,EAAE,EADM;AAEZC,EAAAA,UAAU,EAAE;AAFA,CAAd,C,CAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMC,OAAO,GAAG;AACRC,EAAAA,KADQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAENC,cAAAA,QAFM,GAEK,IAAIN,QAAQ,CAACO,IAAT,CAAcC,kBAAlB,EAFL;AAAA;AAAA,qBAGSR,QAAQ,CAACO,IAAT,GAAgBE,eAAhB,CAAgCH,QAAhC,CAHT;;AAAA;AAGNI,cAAAA,MAHM;AAIZC,cAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACR,IAAnB;;AAJY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,CAAhB;AAWA,eAAe;AACbW,EAAAA,UAAU,EAAE,IADC;AAEbZ,EAAAA,KAAK,EAALA,KAFa;AAGbG,EAAAA,OAAO,EAAPA;AAHa,CAAf","sourcesContent":["// import firebase from '@/firebase'\n//\n// const state = {\n//   user: {},\n//   isLoggedIn = false\n// };\n//\n// const actions = {\n//   async login({context}){\n//     const provider = new firebase.auth.GoogleAuthProvider();\n//     const result = await firebase.auth().signInWithPopup(provider);\n//     console.log(result.user);\n//   }\n// }\n//\n// export default {\n//   namespaced: true,\n//   state,\n//   mutations,\n//   actions,\n// };\nimport firebase from '@/firebase';\n\nconst state = {\n  user: {},\n  isLoggedIn: false,\n};\n\n// const mutations = {\n//   setUser(state, user) {\n//     if (user) {\n//       state.user = user;\n//       state.isLoggedIn = true;\n//     } else {\n//       state.user = {};\n//       state.isLoggedIn = false;\n//     }\n//   },\n// };\n\nconst actions = {\n  async login() {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    const result = await firebase.auth().signInWithPopup(provider);\n    console.log(result.user);\n  },\n  // async logout() {\n  //   await firebase.auth().signOut();\n  // },\n};\n\nexport default {\n  namespaced: true,\n  state,\n  actions,\n};\n"]}]}