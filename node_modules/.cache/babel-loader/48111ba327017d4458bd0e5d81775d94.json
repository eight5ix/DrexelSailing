{"remainingRequest":"/Users/Diallo/Documents/GitHub/DrexelSailing/node_modules/babel-loader/lib/index.js!/Users/Diallo/Documents/GitHub/DrexelSailing/node_modules/eslint-loader/index.js??ref--13-0!/Users/Diallo/Documents/GitHub/DrexelSailing/src/store/auth.js","dependencies":[{"path":"/Users/Diallo/Documents/GitHub/DrexelSailing/src/store/auth.js","mtime":1548701806676},{"path":"/Users/Diallo/Documents/GitHub/DrexelSailing/node_modules/cache-loader/dist/cjs.js","mtime":1548361695455},{"path":"/Users/Diallo/Documents/GitHub/DrexelSailing/node_modules/babel-loader/lib/index.js","mtime":1548361695199},{"path":"/Users/Diallo/Documents/GitHub/DrexelSailing/node_modules/eslint-loader/index.js","mtime":1548361696800}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/Diallo/Documents/GitHub/DrexelSailing/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport firebase from '@/firebase';\nvar state = {\n  user: {},\n  isLoggedIn: false\n}; // const mutations = {\n//   setUser(state, user) {\n//     if (user) {\n//       state.user = user;\n//       state.isLoggedIn = true;\n//     } else {\n//       state.user = {};\n//       state.isLoggedIn = false;\n//     }\n//   },\n// };\n\nvar actions = {\n  login: function () {\n    var _login = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee(_ref) {\n      var _, commit, provider, profile;\n\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _ = _ref._, commit = _ref.commit;\n              provider = new firebase.auth.GoogleAuthProvider();\n              _context.next = 4;\n              return firebase.auth().signInWithPopup(provider);\n\n            case 4:\n              profile = _context.sent;\n              commit('setUser', {\n                id: profile.uid,\n                name: profile.displayName,\n                image: profile.photoURL,\n                createdAt: firebase.firestore.FieldValue.serverTimestamp()\n              });\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function login(_x) {\n      return _login.apply(this, arguments);\n    }\n\n    return login;\n  }() // async logout() {\n  //   await firebase.auth().signOut();\n  // },\n\n};\nexport default {\n  namespaced: true,\n  state: state,\n  actions: actions\n};",{"version":3,"sources":["/Users/Diallo/Documents/GitHub/DrexelSailing/src/store/auth.js"],"names":["firebase","state","user","isLoggedIn","actions","login","_","commit","provider","auth","GoogleAuthProvider","signInWithPopup","profile","id","uid","name","displayName","image","photoURL","createdAt","firestore","FieldValue","serverTimestamp","namespaced"],"mappings":";;AACA,OAAOA,QAAP,MAAqB,YAArB;AAEA,IAAMC,KAAK,GAAG;AACZC,EAAAA,IAAI,EAAE,EADM;AAEZC,EAAAA,UAAU,EAAE;AAFA,CAAd,C,CAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMC,OAAO,GAAG;AACRC,EAAAA,KADQ;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AACDC,cAAAA,CADC,QACDA,CADC,EACEC,MADF,QACEA,MADF;AAENC,cAAAA,QAFM,GAEK,IAAIR,QAAQ,CAACS,IAAT,CAAcC,kBAAlB,EAFL;AAAA;AAAA,qBAGUV,QAAQ,CAACS,IAAT,GAAgBE,eAAhB,CAAgCH,QAAhC,CAHV;;AAAA;AAGNI,cAAAA,OAHM;AAIZL,cAAAA,MAAM,CAAC,SAAD,EAAY;AAChBM,gBAAAA,EAAE,EAAED,OAAO,CAACE,GADI;AAEhBC,gBAAAA,IAAI,EAAEH,OAAO,CAACI,WAFE;AAGhBC,gBAAAA,KAAK,EAAEL,OAAO,CAACM,QAHC;AAIhBC,gBAAAA,SAAS,EAAEnB,QAAQ,CAACoB,SAAT,CAAmBC,UAAnB,CAA8BC,eAA9B;AAJK,eAAZ,CAAN;;AAJY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,MAYd;AACA;AACA;;AAdc,CAAhB;AAiBA,eAAe;AACbC,EAAAA,UAAU,EAAE,IADC;AAEbtB,EAAAA,KAAK,EAALA,KAFa;AAGbG,EAAAA,OAAO,EAAPA;AAHa,CAAf","sourcesContent":["\nimport firebase from '@/firebase';\n\nconst state = {\n  user: {},\n  isLoggedIn: false,\n};\n\n// const mutations = {\n//   setUser(state, user) {\n//     if (user) {\n//       state.user = user;\n//       state.isLoggedIn = true;\n//     } else {\n//       state.user = {};\n//       state.isLoggedIn = false;\n//     }\n//   },\n// };\n\nconst actions = {\n  async login({_, commit}) {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    const profile = await firebase.auth().signInWithPopup(provider);\n    commit('setUser', {\n      id: profile.uid,\n      name: profile.displayName,\n      image: profile.photoURL,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp()\n\n    })\n  }\n  // async logout() {\n  //   await firebase.auth().signOut();\n  // },\n};\n\nexport default {\n  namespaced: true,\n  state,\n  actions,\n};\n"]}]}