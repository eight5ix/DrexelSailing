{"remainingRequest":"/Users/Diallo/Documents/GitHub/DrexelSailing/node_modules/babel-loader/lib/index.js!/Users/Diallo/Documents/GitHub/DrexelSailing/node_modules/eslint-loader/index.js??ref--13-0!/Users/Diallo/Documents/GitHub/DrexelSailing/src/store/auth.js","dependencies":[{"path":"/Users/Diallo/Documents/GitHub/DrexelSailing/src/store/auth.js","mtime":1548706062357},{"path":"/Users/Diallo/Documents/GitHub/DrexelSailing/node_modules/cache-loader/dist/cjs.js","mtime":1548361695455},{"path":"/Users/Diallo/Documents/GitHub/DrexelSailing/node_modules/babel-loader/lib/index.js","mtime":1548361695199},{"path":"/Users/Diallo/Documents/GitHub/DrexelSailing/node_modules/eslint-loader/index.js","mtime":1548361696800}],"contextDependencies":[],"result":["import \"regenerator-runtime/runtime\";\nimport _asyncToGenerator from \"/Users/Diallo/Documents/GitHub/DrexelSailing/node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport firebase from '@/firebase';\nimport db from '@/db';\nvar state = {\n  user: {},\n  isLoggedIn: false\n};\nvar mutations = {\n  setUser: function setUser(state, user) {\n    if (user) {\n      state.user = user;\n      state.isLoggedIn = true;\n    } else {\n      state.user = {};\n      state.isLoggedIn = false;\n    }\n  }\n};\nvar actions = {\n  login: function () {\n    var _login = _asyncToGenerator(\n    /*#__PURE__*/\n    regeneratorRuntime.mark(function _callee(_ref) {\n      var commit, provider, _ref2, user, setUser;\n\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              commit = _ref.commit;\n              provider = new firebase.auth.GoogleAuthProvider();\n              _context.next = 4;\n              return firebase.auth().signInWithPopup(provider);\n\n            case 4:\n              _ref2 = _context.sent;\n              user = _ref2.user;\n              setUser = {\n                id: user.uid,\n                name: user.displayName,\n                image: user.photoURL,\n                createdAt: firebase.firestore.FieldValue.serverTimestamp()\n              };\n              db.collection('users').doc(setUser.id).set(setUser);\n              commit('setUser', setUser); // async logout() {\n              //   await firebase.auth().signOut();\n              // },\n\n            case 9:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }));\n\n    function login(_x) {\n      return _login.apply(this, arguments);\n    }\n\n    return login;\n  }()\n};\nexport default {\n  namespaced: true,\n  state: state,\n  mutations: mutations,\n  actions: actions\n};",{"version":3,"sources":["/Users/Diallo/Documents/GitHub/DrexelSailing/src/store/auth.js"],"names":["firebase","db","state","user","isLoggedIn","mutations","setUser","actions","login","commit","provider","auth","GoogleAuthProvider","signInWithPopup","id","uid","name","displayName","image","photoURL","createdAt","firestore","FieldValue","serverTimestamp","collection","doc","set","namespaced"],"mappings":";;AAAA,OAAOA,QAAP,MAAqB,YAArB;AACA,OAAOC,EAAP,MAAe,MAAf;AAEA,IAAMC,KAAK,GAAG;AACZC,EAAAA,IAAI,EAAE,EADM;AAEZC,EAAAA,UAAU,EAAE;AAFA,CAAd;AAKA,IAAMC,SAAS,GAAG;AAChBC,EAAAA,OADgB,mBACRJ,KADQ,EACDC,IADC,EACK;AACnB,QAAIA,IAAJ,EAAU;AACRD,MAAAA,KAAK,CAACC,IAAN,GAAaA,IAAb;AACAD,MAAAA,KAAK,CAACE,UAAN,GAAmB,IAAnB;AACD,KAHD,MAGO;AACLF,MAAAA,KAAK,CAACC,IAAN,GAAa,EAAb;AACAD,MAAAA,KAAK,CAACE,UAAN,GAAmB,KAAnB;AACD;AACF;AATe,CAAlB;AAYA,IAAMG,OAAO,GAAG;AACRC,EAAAA,KADQ;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AACAC,cAAAA,MADA,QACAA,MADA;AAENC,cAAAA,QAFM,GAEK,IAAIV,QAAQ,CAACW,IAAT,CAAcC,kBAAlB,EAFL;AAAA;AAAA,qBAGWZ,QAAQ,CAACW,IAAT,GAAgBE,eAAhB,CAAgCH,QAAhC,CAHX;;AAAA;AAAA;AAGJP,cAAAA,IAHI,SAGJA,IAHI;AAING,cAAAA,OAJM,GAII;AACdQ,gBAAAA,EAAE,EAAEX,IAAI,CAACY,GADK;AAEdC,gBAAAA,IAAI,EAAEb,IAAI,CAACc,WAFG;AAGdC,gBAAAA,KAAK,EAAEf,IAAI,CAACgB,QAHE;AAIdC,gBAAAA,SAAS,EAAEpB,QAAQ,CAACqB,SAAT,CAAmBC,UAAnB,CAA8BC,eAA9B;AAJG,eAJJ;AAUZtB,cAAAA,EAAE,CAACuB,UAAH,CAAc,OAAd,EAAuBC,GAAvB,CAA2BnB,OAAO,CAACQ,EAAnC,EAAuCY,GAAvC,CAA2CpB,OAA3C;AACAG,cAAAA,MAAM,CAAC,SAAD,EAAYH,OAAZ,CAAN,CAXY,CAYd;AACA;AACA;;AAdc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,CAAhB;AAkBA,eAAe;AACbqB,EAAAA,UAAU,EAAE,IADC;AAEbzB,EAAAA,KAAK,EAALA,KAFa;AAGbG,EAAAA,SAAS,EAATA,SAHa;AAIbE,EAAAA,OAAO,EAAPA;AAJa,CAAf","sourcesContent":["import firebase from '@/firebase';\nimport db from '@/db'\n\nconst state = {\n  user: {},\n  isLoggedIn: false,\n};\n\nconst mutations = {\n  setUser(state, user) {\n    if (user) {\n      state.user = user;\n      state.isLoggedIn = true;\n    } else {\n      state.user = {};\n      state.isLoggedIn = false;\n    }\n  },\n};\n\nconst actions = {\n  async login({ commit }) {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    const { user } = await firebase.auth().signInWithPopup(provider);\n    const setUser = {\n      id: user.uid,\n      name: user.displayName,\n      image: user.photoURL,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp()\n    };\n    db.collection('users').doc(setUser.id).set(setUser);\n    commit('setUser', setUser);\n  // async logout() {\n  //   await firebase.auth().signOut();\n  // },\n}\n};\n\nexport default {\n  namespaced: true,\n  state,\n  mutations,\n  actions,\n};\n"]}]}