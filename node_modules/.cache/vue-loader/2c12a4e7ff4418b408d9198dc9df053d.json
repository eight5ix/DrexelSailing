{"remainingRequest":"C:\\Users\\tykap\\Documents\\GitHub\\DrexelSailing\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Users\\tykap\\Documents\\GitHub\\DrexelSailing\\node_modules\\vuetify-loader\\lib\\loader.js!C:\\Users\\tykap\\Documents\\GitHub\\DrexelSailing\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\tykap\\Documents\\GitHub\\DrexelSailing\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\tykap\\Documents\\GitHub\\DrexelSailing\\src\\components\\Nav.vue?vue&type=template&id=65af85a3&","dependencies":[{"path":"C:\\Users\\tykap\\Documents\\GitHub\\DrexelSailing\\src\\components\\Nav.vue","mtime":1548710943756},{"path":"C:\\Users\\tykap\\Documents\\GitHub\\DrexelSailing\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1548692838979},{"path":"C:\\Users\\tykap\\Documents\\GitHub\\DrexelSailing\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":1548692866417},{"path":"C:\\Users\\tykap\\Documents\\GitHub\\DrexelSailing\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1548692868860},{"path":"C:\\Users\\tykap\\Documents\\GitHub\\DrexelSailing\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1548692838979},{"path":"C:\\Users\\tykap\\Documents\\GitHub\\DrexelSailing\\node_modules\\vue-loader\\lib\\index.js","mtime":1548692866409}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"nav\",\n    [\n      _c(\n        \"v-toolbar\",\n        { attrs: { flat: \"\", app: \"\", color: \"primary\", height: 100 } },\n        [\n          _c(\"v-toolbar-side-icon\", {\n            staticClass: \"secondary--text hidden-md-and-up\",\n            on: {\n              click: function($event) {\n                _vm.drawer = !_vm.drawer\n              }\n            },\n            model: {\n              value: _vm.drawer,\n              callback: function($$v) {\n                _vm.drawer = $$v\n              },\n              expression: \"drawer\"\n            }\n          }),\n          _c(\n            \"v-toolbar-title\",\n            { staticClass: \"white--text mr-4\" },\n            [\n              _c(\"router-link\", { attrs: { tag: \"button\", to: \"/\" } }, [\n                _c(\"img\", {\n                  staticClass: \"hidden-sm-and-down\",\n                  attrs: {\n                    src: require(\"@/assets/drxsailingletters.png\"),\n                    height: 100\n                  }\n                }),\n                _c(\"img\", {\n                  staticClass: \"hidden-md-and-up\",\n                  attrs: {\n                    src: require(\"@/assets/drxsailingletters.png\"),\n                    height: 75\n                  }\n                })\n              ])\n            ],\n            1\n          ),\n          _c(\"v-spacer\"),\n          _c(\n            \"v-toolbar-items\",\n            { staticClass: \"hidden-sm-and-down\" },\n            _vm._l(_vm.links, function(link) {\n              return _c(\n                \"v-btn\",\n                {\n                  key: link.text,\n                  staticClass: \"secondary--text font-weight-light\",\n                  attrs: { flat: \"\", router: \"\", to: link.route }\n                },\n                [_vm._v(_vm._s(link.text) + \"\\r\\n                \")]\n              )\n            }),\n            1\n          ),\n          _c(\n            \"v-btn\",\n            {\n              attrs: { flat: \"\", color: \"secondary\" },\n              on: {\n                click: function($event) {\n                  _vm.dialog = !_vm.dialog\n                }\n              }\n            },\n            [\n              _c(\"span\", [_vm._v(\"Sign Up\")]),\n              _c(\"v-icon\", { attrs: { right: \"\" } }, [_vm._v(\"exit_to_app\")])\n            ],\n            1\n          ),\n          _c(\n            \"v-menu\",\n            { attrs: { \"offset-y\": \"\" } },\n            [\n              _c(\n                \"v-btn\",\n                {\n                  attrs: { slot: \"activator\", dark: \"\", icon: \"\" },\n                  slot: \"activator\"\n                },\n                [\n                  _c(\n                    \"v-avatar\",\n                    {\n                      attrs: {\n                        tile: _vm.tile,\n                        size: _vm.avatarSize,\n                        color: \"grey lighten-4\"\n                      }\n                    },\n                    [\n                      _c(\"img\", {\n                        attrs: {\n                          src:\n                            \"https://vuetifyjs.com/apple-touch-icon-180x180.png\",\n                          alt: \"avatar\"\n                        }\n                      })\n                    ]\n                  )\n                ],\n                1\n              ),\n              _c(\n                \"v-list\",\n                [\n                  _c(\n                    \"v-list-tile\",\n                    {\n                      staticClass: \"red--text\",\n                      on: { click: function($event) {} }\n                    },\n                    [_c(\"v-list-tile-title\", [_vm._v(\"Log Out\")])],\n                    1\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _c(\n        \"v-navigation-drawer\",\n        {\n          staticClass: \"primary hidden-md-and-up\",\n          attrs: { app: \"\" },\n          model: {\n            value: _vm.drawer,\n            callback: function($$v) {\n              _vm.drawer = $$v\n            },\n            expression: \"drawer\"\n          }\n        },\n        [\n          _c(\n            \"v-list\",\n            _vm._l(_vm.links, function(link) {\n              return _c(\n                \"v-list-tile\",\n                { key: link.text, attrs: { router: \"\", to: link.route } },\n                [\n                  _c(\n                    \"v-list-tile-action\",\n                    [\n                      _c(\"v-icon\", { staticClass: \"white--text\" }, [\n                        _vm._v(_vm._s(link.icon))\n                      ])\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"v-list-tile-content\",\n                    [\n                      _c(\"v-list-tile-title\", { staticClass: \"white--text\" }, [\n                        _vm._v(_vm._s(link.text))\n                      ])\n                    ],\n                    1\n                  )\n                ],\n                1\n              )\n            }),\n            1\n          )\n        ],\n        1\n      ),\n      _c(\n        \"v-dialog\",\n        {\n          attrs: { width: \"50%\" },\n          model: {\n            value: _vm.dialog,\n            callback: function($$v) {\n              _vm.dialog = $$v\n            },\n            expression: \"dialog\"\n          }\n        },\n        [\n          _c(\n            \"v-card\",\n            [\n              _c(\n                \"v-card-title\",\n                {\n                  staticClass: \"headline grey lighten-2\",\n                  attrs: { \"primary-title\": \"\" }\n                },\n                [_vm._v(\"\\r\\n          Sign up\\r\\n        \")]\n              ),\n              _c(\n                \"v-card\",\n                { ref: \"form\", staticClass: \"pa-3\" },\n                [\n                  _c(\"v-icon\", [_vm._v(\"mdi-mail\")]),\n                  _c(\"v-text-field\", {\n                    attrs: {\n                      rules: _vm.emailRules,\n                      label: \"E-mail\",\n                      placeholder: \"wavy@drexel.edu\",\n                      required: \"\"\n                    },\n                    model: {\n                      value: _vm.email,\n                      callback: function($$v) {\n                        _vm.email = $$v\n                      },\n                      expression: \"email\"\n                    }\n                  }),\n                  _c(\"v-text-field\", {\n                    attrs: {\n                      rules: _vm.passwordRules,\n                      label: \"Password\",\n                      placeholder: \"password\",\n                      required: \"\"\n                    },\n                    model: {\n                      value: _vm.password,\n                      callback: function($$v) {\n                        _vm.password = $$v\n                      },\n                      expression: \"password\"\n                    }\n                  }),\n                  _c(\n                    \"v-btn\",\n                    {\n                      attrs: { color: \"primary\", flat: \"\" },\n                      on: {\n                        click: function($event) {\n                          _vm.login()\n                        }\n                      }\n                    },\n                    [_vm._v(\"\\r\\n              Google\\r\\n            \")]\n                  )\n                ],\n                1\n              ),\n              _c(\"v-divider\"),\n              _c(\n                \"v-card-actions\",\n                [\n                  _c(\"v-spacer\"),\n                  _c(\"v-btn\", { attrs: { color: \"primary\", flat: \"\" } }, [\n                    _vm._v(\"\\r\\n            Sign Up\\r\\n          \")\n                  ])\n                ],\n                1\n              )\n            ],\n            1\n          )\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}